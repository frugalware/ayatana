diff --git a/src/systemctl.c b/src/systemctl.c
index 7caeb6d..9e6aad7 100644
--- a/src/systemctl.c
+++ b/src/systemctl.c
@@ -3438,7 +3438,7 @@ finish:
 static int enable_sysv_units(char **args) {
         int r = 0;
 
-#if defined (HAVE_SYSV_COMPAT) && (defined(TARGET_FEDORA) || defined(TARGET_MANDRIVA) || defined(TARGET_SUSE) || defined(TARGET_MEEGO) || defined(TARGET_ALTLINUX))
+#if defined (HAVE_SYSV_COMPAT) && (defined(TARGET_FEDORA) || defined(TARGET_MANDRIVA) || defined(TARGET_SUSE) || defined(TARGET_MEEGO) || defined(TARGET_ALTLINUX) || defined(TARGET_FRUGALWARE))
         const char *verb = args[0];
         unsigned f = 1, t = 1;
         LookupPaths paths;
@@ -3466,7 +3466,7 @@ static int enable_sysv_units(char **args) {
                 char *p;
                 bool found_native = false, found_sysv;
                 unsigned c = 1;
-                const char *argv[6] = { "/sbin/chkconfig", NULL, NULL, NULL, NULL };
+                const char *argv[6] = { "/usr/sbin/chkconfig", NULL, NULL, NULL, NULL };
                 char **k, *l, *q = NULL;
                 int j;
                 pid_t pid;
@@ -3484,9 +3484,9 @@ static int enable_sysv_units(char **args) {
                         p = NULL;
 
                         if (!isempty(arg_root))
-                                asprintf(&p, "%s/%s/%s", arg_root, *k, name);
+                                asprintf(&p, "%s/%s/rc.%s", arg_root, *k, name);
                         else
-                                asprintf(&p, "%s/%s", *k, name);
+                                asprintf(&p, "%s/rc.%s", *k, name);
 
                         if (!p) {
                                 log_error("No memory");
@@ -3506,9 +3506,9 @@ static int enable_sysv_units(char **args) {
 
                 p = NULL;
                 if (!isempty(arg_root))
-                        asprintf(&p, "%s/" SYSTEM_SYSVINIT_PATH "/%s", arg_root, name);
+                        asprintf(&p, "%s/" SYSTEM_SYSVINIT_PATH "/rc.%s", arg_root, name);
                 else
-                        asprintf(&p, SYSTEM_SYSVINIT_PATH "/%s", name);
+                        asprintf(&p, SYSTEM_SYSVINIT_PATH "/rc.%s", name);
                 if (!p) {
                         log_error("No memory");
                         r = -ENOMEM;
@@ -3526,15 +3526,14 @@ static int enable_sysv_units(char **args) {
                 /* Mark this entry, so that we don't try enabling it as native unit */
                 args[f] = (char*) "";
 
-                log_info("%s is not a native service, redirecting to /sbin/chkconfig.", name);
+                log_info("%s is not a native service, redirecting to /usr/sbin/chkconfig.", name);
 
                 if (!isempty(arg_root))
                         argv[c++] = q = strappend("--root=", arg_root);
 
+		if (streq(verb, "enable") || streq(verb, "disable"))
+			argv[c++] = streq(verb, "enable") ? "--add" : "--del";
                 argv[c++] = file_name_from_path(p);
-                argv[c++] =
-                        streq(verb, "enable") ? "on" :
-                        streq(verb, "disable") ? "off" : "--level=5";
                 argv[c] = NULL;
 
                 l = strv_join((char**)argv, " ");
